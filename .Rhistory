scale_color_manual(values = c("steelblue3")) +
scale_fill_manual(values = c("steelblue3"))
ggplot(irf_uk_df, aes(x = 1:nrow(irf_fr_df))) +
geom_line(aes(y = central, color = "central path of response function"), size = 1.1) +
geom_point(aes(y = central, color = "central path of response function"), size = 2) +
geom_ribbon(aes(ymin = lb, ymax = ub, fill = "95% confidence interval"), alpha = 0.4) +
scale_x_continuous(labels = paste("t + ", 1:nrow(irf_uk_df)), breaks = 1:nrow(irf_uk_df)) +
geom_hline(yintercept = 0, linetype = 2) +
coord_cartesian(ylim = c(min(irf_uk_df, na.rm = TRUE), max(irf_uk_df, na.rm = TRUE))) +
labs(title = "Impulse response function of United Kingdom", x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45),
legend.title = element_blank(), legend.position = "none") +
scale_color_manual(values = c("coral2")) +
scale_fill_manual(values = c("coral2"))
france_irf_plot <- ggplot(irf_fr_df, aes(x = 1:nrow(irf_fr_df))) +
geom_line(aes(y = central, color = "central path of response function"), size = 1.1) +
geom_point(aes(y = central, color = "central path of response function"), size = 2) +
geom_ribbon(aes(ymin = lb, ymax = ub, fill = "95% confidence interval"), alpha = 0.4) +
scale_x_continuous(labels = paste("t + ", 1:nrow(irf_fr_df)), breaks = 1:nrow(irf_fr_df)) +
geom_hline(yintercept = 0, linetype = 2) +
coord_cartesian(ylim = c(min(irf_fr_df, na.rm = TRUE), max(irf_fr_df, na.rm = TRUE))) +
labs(title = "Impulse response function of France", x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45),
legend.title = element_blank(), legend.position = "bottom") +
scale_color_manual(values = c("steelblue3")) +
scale_fill_manual(values = c("steelblue3"))
uk_irf_plot <-  ggplot(irf_uk_df, aes(x = 1:nrow(irf_fr_df))) +
geom_line(aes(y = central, color = "central path of response function"), size = 1.1) +
geom_point(aes(y = central, color = "central path of response function"), size = 2) +
geom_ribbon(aes(ymin = lb, ymax = ub, fill = "95% confidence interval"), alpha = 0.4) +
scale_x_continuous(labels = paste("t + ", 1:nrow(irf_uk_df)), breaks = 1:nrow(irf_uk_df)) +
geom_hline(yintercept = 0, linetype = 2) +
coord_cartesian(ylim = c(min(irf_uk_df, na.rm = TRUE), max(irf_uk_df, na.rm = TRUE))) +
labs(title = "Impulse response function of United Kingdom", x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45),
legend.title = element_blank(), legend.position = "none") +
scale_color_manual(values = c("coral2")) +
scale_fill_manual(values = c("coral2"))
ggplot(irf_uk_cum_df, aes(x = 1:nrow(irf_uk_cum_df))) +
geom_line(aes(y = central, color = "central path of response function"), size = 1.1) +
geom_point(aes(y = central, color = "central path of response function"), size = 2) +
geom_ribbon(aes(ymin = lb, ymax = ub, fill = "95% confidence interval"), alpha = 0.4) +
scale_x_continuous(labels = paste("t + ", 1:nrow(irf_uk_cum_df)), breaks = 1:nrow(irf_uk_cum_df)) +
geom_hline(yintercept = 0, linetype = 2) +
coord_cartesian(ylim = c(min(irf_uk_cum_df, na.rm = TRUE), max(irf_uk_cum_df, na.rm = TRUE))) +
labs(title = "Impulse response function of United Kingdom", x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45),
legend.title = element_blank(), legend.position = "none") +
scale_color_manual(values = c("coral2")) +
scale_fill_manual(values = c("coral2"))
ggplot(irf_fr_cum_df, aes(x = 1:nrow(irf_fr_cum_df))) +
geom_line(aes(y = central, color = "central path of response function"), size = 1.1) +
geom_point(aes(y = central, color = "central path of response function"), size = 2) +
geom_ribbon(aes(ymin = lb, ymax = ub, fill = "95% confidence interval"), alpha = 0.4) +
scale_x_continuous(labels = paste("t + ", 1:nrow(irf_fr_cum_df)), breaks = 1:nrow(irf_fr_cum_df)) +
geom_hline(yintercept = 0, linetype = 2) +
coord_cartesian(ylim = c(min(irf_fr_cum_df, na.rm = TRUE), max(irf_fr_cum_df, na.rm = TRUE))) +
labs(title = "Impulse response function of United Kingdom", x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45),
legend.title = element_blank(), legend.position = "none") +
scale_color_manual(values = c("coral2")) +
scale_fill_manual(values = c("coral2"))
uk_irf_cum_plot <- ggplot(irf_uk_cum_df, aes(x = 1:nrow(irf_uk_cum_df))) +
geom_line(aes(y = central, color = "central path of response function"), size = 1.1) +
geom_point(aes(y = central, color = "central path of response function"), size = 2) +
geom_ribbon(aes(ymin = lb, ymax = ub, fill = "95% confidence interval"), alpha = 0.4) +
scale_x_continuous(labels = paste("t + ", 1:nrow(irf_uk_cum_df)), breaks = 1:nrow(irf_uk_cum_df)) +
geom_hline(yintercept = 0, linetype = 2) +
coord_cartesian(ylim = c(min(irf_uk_cum_df, na.rm = TRUE), max(irf_uk_cum_df, na.rm = TRUE))) +
labs(title = "Impulse response function of United Kingdom", x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45),
legend.title = element_blank(), legend.position = "none") +
scale_color_manual(values = c("coral2")) +
scale_fill_manual(values = c("coral2"))
fr_irf_cum_plot <- ggplot(irf_fr_cum_df, aes(x = 1:nrow(irf_fr_cum_df))) +
geom_line(aes(y = central, color = "central path of response function"), size = 1.1) +
geom_point(aes(y = central, color = "central path of response function"), size = 2) +
geom_ribbon(aes(ymin = lb, ymax = ub, fill = "95% confidence interval"), alpha = 0.4) +
scale_x_continuous(labels = paste("t + ", 1:nrow(irf_fr_cum_df)), breaks = 1:nrow(irf_fr_cum_df)) +
geom_hline(yintercept = 0, linetype = 2) +
coord_cartesian(ylim = c(min(irf_fr_cum_df, na.rm = TRUE), max(irf_fr_cum_df, na.rm = TRUE))) +
labs(title = "Impulse response function of United Kingdom", x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45),
legend.title = element_blank(), legend.position = "none") +
scale_color_manual(values = c("coral2")) +
scale_fill_manual(values = c("coral2"))
irfs_plot <- gridExtra::grid.arrange(uk_irf_plot, france_irf_plot, fr_irf_cum_plot, uk_irf_cum_plot)
irfs_plot <- gridExtra::grid.arrange(uk_irf_plot, uk_irf_cum_plot,
france_irf_plot, fr_irf_cum_plot)
fr_irf_cum_plot <- ggplot(irf_fr_cum_df, aes(x = 1:nrow(irf_fr_cum_df))) +
geom_line(aes(y = central, color = "central path of response function"), size = 1.1) +
geom_point(aes(y = central, color = "central path of response function"), size = 2) +
geom_ribbon(aes(ymin = lb, ymax = ub, fill = "95% confidence interval"), alpha = 0.4) +
scale_x_continuous(labels = paste("t + ", 1:nrow(irf_fr_cum_df)), breaks = 1:nrow(irf_fr_cum_df)) +
geom_hline(yintercept = 0, linetype = 2) +
coord_cartesian(ylim = c(min(irf_fr_cum_df, na.rm = TRUE), max(irf_fr_cum_df, na.rm = TRUE))) +
labs(title = "Impulse response function of United Kingdom", x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45),
legend.title = element_blank(), legend.position = "none") +
scale_color_manual(values = c("steelblue3")) +
scale_fill_manual(values = c("steelblue3"))
irfs_plot <- gridExtra::grid.arrange(uk_irf_plot, uk_irf_cum_plot,
france_irf_plot, fr_irf_cum_plot)
france_irf_plot <- ggplot(irf_fr_df, aes(x = 1:nrow(irf_fr_df))) +
geom_line(aes(y = central, color = "central path of response function"), size = 1.1) +
geom_point(aes(y = central, color = "central path of response function"), size = 2) +
geom_ribbon(aes(ymin = lb, ymax = ub, fill = "95% confidence interval"), alpha = 0.4) +
scale_x_continuous(labels = paste("t + ", 1:nrow(irf_fr_df)), breaks = 1:nrow(irf_fr_df)) +
geom_hline(yintercept = 0, linetype = 2) +
coord_cartesian(ylim = c(min(irf_fr_df, na.rm = TRUE), max(irf_fr_df, na.rm = TRUE))) +
labs(title = "Impulse response function of France", x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45),
legend.title = element_blank(), legend.position = "none") +
scale_color_manual(values = c("steelblue3")) +
scale_fill_manual(values = c("steelblue3"))
uk_irf_plot <-  ggplot(irf_uk_df, aes(x = 1:nrow(irf_fr_df))) +
geom_line(aes(y = central, color = "central path of response function"), size = 1.1) +
geom_point(aes(y = central, color = "central path of response function"), size = 2) +
geom_ribbon(aes(ymin = lb, ymax = ub, fill = "95% confidence interval"), alpha = 0.4) +
scale_x_continuous(labels = paste("t + ", 1:nrow(irf_uk_df)), breaks = 1:nrow(irf_uk_df)) +
geom_hline(yintercept = 0, linetype = 2) +
coord_cartesian(ylim = c(min(irf_uk_df, na.rm = TRUE), max(irf_uk_df, na.rm = TRUE))) +
labs(title = "Impulse response function of United Kingdom", x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45),
legend.title = element_blank(), legend.position = "none") +
scale_color_manual(values = c("coral2")) +
scale_fill_manual(values = c("coral2"))
uk_irf_cum_plot <- ggplot(irf_uk_cum_df, aes(x = 1:nrow(irf_uk_cum_df))) +
geom_line(aes(y = central, color = "central path of response function"), size = 1.1) +
geom_point(aes(y = central, color = "central path of response function"), size = 2) +
geom_ribbon(aes(ymin = lb, ymax = ub, fill = "95% confidence interval"), alpha = 0.4) +
scale_x_continuous(labels = paste("t + ", 1:nrow(irf_uk_cum_df)), breaks = 1:nrow(irf_uk_cum_df)) +
geom_hline(yintercept = 0, linetype = 2) +
coord_cartesian(ylim = c(min(irf_uk_cum_df, na.rm = TRUE), max(irf_uk_cum_df, na.rm = TRUE))) +
labs(title = "Impulse response function of United Kingdom", x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45),
legend.title = element_blank(), legend.position = "right") +
scale_color_manual(values = c("coral2")) +
scale_fill_manual(values = c("coral2"))
fr_irf_cum_plot <- ggplot(irf_fr_cum_df, aes(x = 1:nrow(irf_fr_cum_df))) +
geom_line(aes(y = central, color = "central path of response function"), size = 1.1) +
geom_point(aes(y = central, color = "central path of response function"), size = 2) +
geom_ribbon(aes(ymin = lb, ymax = ub, fill = "95% confidence interval"), alpha = 0.4) +
scale_x_continuous(labels = paste("t + ", 1:nrow(irf_fr_cum_df)), breaks = 1:nrow(irf_fr_cum_df)) +
geom_hline(yintercept = 0, linetype = 2) +
coord_cartesian(ylim = c(min(irf_fr_cum_df, na.rm = TRUE), max(irf_fr_cum_df, na.rm = TRUE))) +
labs(title = "Impulse response function of United Kingdom", x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45),
legend.title = element_blank(), legend.position = "right") +
scale_color_manual(values = c("steelblue3")) +
scale_fill_manual(values = c("steelblue3"))
irfs_plot <- gridExtra::grid.arrange(uk_irf_plot, uk_irf_cum_plot,
france_irf_plot, fr_irf_cum_plot)
irfs_plot <- gridExtra::grid.arrange(uk_irf_plot, uk_irf_cum_plot,
france_irf_plot, fr_irf_cum_plot)
france_irf_plot <- ggplot(irf_fr_df, aes(x = 1:nrow(irf_fr_df))) +
geom_line(aes(y = central, color = "central path"), size = 1.1) +
geom_point(aes(y = central, color = "central path"), size = 2) +
geom_ribbon(aes(ymin = lb, ymax = ub, fill = "95% confidence interval"), alpha = 0.4) +
scale_x_continuous(labels = paste("t + ", 1:nrow(irf_fr_df)), breaks = 1:nrow(irf_fr_df)) +
geom_hline(yintercept = 0, linetype = 2) +
coord_cartesian(ylim = c(min(irf_fr_df, na.rm = TRUE), max(irf_fr_df, na.rm = TRUE))) +
labs(title = "Impulse response function of France", x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45),
legend.title = element_blank(), legend.position = "none") +
scale_color_manual(values = c("steelblue3")) +
scale_fill_manual(values = c("steelblue3"))
uk_irf_plot <-  ggplot(irf_uk_df, aes(x = 1:nrow(irf_fr_df))) +
geom_line(aes(y = central, color = "central path"), size = 1.1) +
geom_point(aes(y = central, color = "central path"), size = 2) +
geom_ribbon(aes(ymin = lb, ymax = ub, fill = "95% confidence interval"), alpha = 0.4) +
scale_x_continuous(labels = paste("t + ", 1:nrow(irf_uk_df)), breaks = 1:nrow(irf_uk_df)) +
geom_hline(yintercept = 0, linetype = 2) +
coord_cartesian(ylim = c(min(irf_uk_df, na.rm = TRUE), max(irf_uk_df, na.rm = TRUE))) +
labs(title = "Impulse response function of United Kingdom", x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45),
legend.title = element_blank(), legend.position = "none") +
scale_color_manual(values = c("coral2")) +
scale_fill_manual(values = c("coral2"))
uk_irf_cum_plot <- ggplot(irf_uk_cum_df, aes(x = 1:nrow(irf_uk_cum_df))) +
geom_line(aes(y = central, color = "central path"), size = 1.1) +
geom_point(aes(y = central, color = "central path"), size = 2) +
geom_ribbon(aes(ymin = lb, ymax = ub, fill = "95% confidence interval"), alpha = 0.4) +
scale_x_continuous(labels = paste("t + ", 1:nrow(irf_uk_cum_df)), breaks = 1:nrow(irf_uk_cum_df)) +
geom_hline(yintercept = 0, linetype = 2) +
coord_cartesian(ylim = c(min(irf_uk_cum_df, na.rm = TRUE), max(irf_uk_cum_df, na.rm = TRUE))) +
labs(title = "Impulse response function of United Kingdom", x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45),
legend.title = element_blank(), legend.position = "right") +
scale_color_manual(values = c("coral2")) +
scale_fill_manual(values = c("coral2"))
fr_irf_cum_plot <- ggplot(irf_fr_cum_df, aes(x = 1:nrow(irf_fr_cum_df))) +
geom_line(aes(y = central, color = "central path"), size = 1.1) +
geom_point(aes(y = central, color = "central path"), size = 2) +
geom_ribbon(aes(ymin = lb, ymax = ub, fill = "95% confidence interval"), alpha = 0.4) +
scale_x_continuous(labels = paste("t + ", 1:nrow(irf_fr_cum_df)), breaks = 1:nrow(irf_fr_cum_df)) +
geom_hline(yintercept = 0, linetype = 2) +
coord_cartesian(ylim = c(min(irf_fr_cum_df, na.rm = TRUE), max(irf_fr_cum_df, na.rm = TRUE))) +
labs(title = "Impulse response function of United Kingdom", x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45),
legend.title = element_blank(), legend.position = "right") +
scale_color_manual(values = c("steelblue3")) +
scale_fill_manual(values = c("steelblue3"))
irfs_plot <- gridExtra::grid.arrange(uk_irf_plot, uk_irf_cum_plot,
france_irf_plot, fr_irf_cum_plot)
irfs_plot <- gridExtra::grid.arrange(uk_irf_plot, uk_irf_cum_plot,
france_irf_plot, fr_irf_cum_plot)
uk_irf_cum_plot <- ggplot(irf_uk_cum_df, aes(x = 1:nrow(irf_uk_cum_df))) +
geom_line(aes(y = central, color = "central path"), size = 1.1) +
geom_point(aes(y = central, color = "central path"), size = 2) +
geom_ribbon(aes(ymin = lb, ymax = ub, fill = "95% confidence interval"), alpha = 0.4) +
scale_x_continuous(labels = paste("t + ", 1:nrow(irf_uk_cum_df)), breaks = 1:nrow(irf_uk_cum_df)) +
geom_hline(yintercept = 0, linetype = 2) +
coord_cartesian(ylim = c(min(irf_uk_cum_df, na.rm = TRUE), max(irf_uk_cum_df, na.rm = TRUE))) +
labs(title = "Cumulative IRF", x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45),
legend.title = element_blank(), legend.position = "right") +
scale_color_manual(values = c("coral2")) +
scale_fill_manual(values = c("coral2"))
fr_irf_cum_plot <- ggplot(irf_fr_cum_df, aes(x = 1:nrow(irf_fr_cum_df))) +
geom_line(aes(y = central, color = "central path"), size = 1.1) +
geom_point(aes(y = central, color = "central path"), size = 2) +
geom_ribbon(aes(ymin = lb, ymax = ub, fill = "95% confidence interval"), alpha = 0.4) +
scale_x_continuous(labels = paste("t + ", 1:nrow(irf_fr_cum_df)), breaks = 1:nrow(irf_fr_cum_df)) +
geom_hline(yintercept = 0, linetype = 2) +
coord_cartesian(ylim = c(min(irf_fr_cum_df, na.rm = TRUE), max(irf_fr_cum_df, na.rm = TRUE))) +
labs(title = "Cumulative IRF", x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45),
legend.title = element_blank(), legend.position = "right") +
scale_color_manual(values = c("steelblue3")) +
scale_fill_manual(values = c("steelblue3"))
irfs_plot <- gridExtra::grid.arrange(uk_irf_plot, uk_irf_cum_plot,
france_irf_plot, fr_irf_cum_plot)
ggsave(irfs_plot, filename = "irf_plot.pdf", width = 7, height = 4)
ggsave(irfs_plot, filename = "irf_plot.pdf", width = 10, height = 6)
ggsave(irfs_plot, filename = "irf_plot.pdf", width = 9, height = 6)
mutate(df, trend_fr = mFilter::cffilter(gdp_FR)$trend,
trend_uk = mFilter::cffilter(gdp_UK)$trend,
cycle_fr = mFilter::cffilter(gdp_FR)$cycle) %>%
ggplot(aes(x = date)) +
geom_line(aes(y = trend_uk, color = "UK")) +
geom_line(aes(y = trend_fr, color = "France")) +
geom_hline(yintercept = 0, linetype = 3) +
labs(title = "Bsiness cycle of France and UK",
subtitle = "Christiano-Fitzgerald filter applied to GDP growth rate")
library(fredr)
library(ggplot2)
library(TTR)
library(vars)
library(tidyverse)
library(urca)
library(eurostat)
library(corrr)
library(gghighlight)
library(ggrepel)
library(readxl)
library(wbstats)
library(xtable)
library(sandwich)
mutate(df, trend_fr = mFilter::cffilter(gdp_FR)$trend,
trend_uk = mFilter::cffilter(gdp_UK)$trend,
cycle_fr = mFilter::cffilter(gdp_FR)$cycle) %>%
ggplot(aes(x = date)) +
geom_line(aes(y = trend_uk, color = "UK")) +
geom_line(aes(y = trend_fr, color = "France")) +
geom_hline(yintercept = 0, linetype = 3) +
labs(title = "Bsiness cycle of France and UK",
subtitle = "Christiano-Fitzgerald filter applied to GDP growth rate")
mutate(df, trend_fr = mFilter::cffilter(gdp_FR)$trend,
trend_uk = mFilter::cffilter(gdp_UK)$trend,
cycle_fr = mFilter::cffilter(gdp_FR)$cycle) %>%
ggplot(aes(x = date)) +
geom_line(aes(y = trend_uk, color = "UK")) +
geom_line(aes(y = trend_fr, color = "France")) +
geom_hline(yintercept = 0, linetype = 3) +
labs(title = "Business cycle of France and UK",
subtitle = "Christiano-Fitzgerald filter applied to GDP growth rate") +
theme_minimal()
mutate(df, trend_fr = mFilter::cffilter(gdp_FR)$trend,
trend_uk = mFilter::cffilter(gdp_UK)$trend,
cycle_fr = mFilter::cffilter(gdp_FR)$cycle) %>%
ggplot(aes(x = date)) +
geom_line(aes(y = trend_uk, color = "UK")) +
geom_line(aes(y = trend_fr, color = "France")) +
geom_hline(yintercept = 0, linetype = 3) +
labs(title = "Business cycle of France and UK",
subtitle = "Christiano-Fitzgerald filter applied to GDP growth rate") +
theme_minimal() +
theme(legend.title = element_blank())
mutate(df, trend_fr = mFilter::cffilter(gdp_FR)$trend,
trend_uk = mFilter::cffilter(gdp_UK)$trend,
cycle_fr = mFilter::cffilter(gdp_FR)$cycle) %>%
ggplot(aes(x = date)) +
geom_line(aes(y = trend_uk, color = "UK")) +
geom_line(aes(y = trend_fr, color = "France")) +
geom_hline(yintercept = 0, linetype = 3) +
labs(title = "Business cycle of France and UK",
subtitle = "Christiano-Fitzgerald filter applied to GDP growth rate",
x = "", y = "") +
theme_minimal() +
theme(legend.title = element_blank()) +
scale_y_continuous(labels = scales::percent)
mutate(df, trend_fr = mFilter::cffilter(gdp_FR)$trend,
trend_uk = mFilter::cffilter(gdp_UK)$trend,
cycle_fr = mFilter::cffilter(gdp_FR)$cycle) %>%
ggplot(aes(x = date)) +
geom_line(aes(y = trend_uk, color = "UK", color = "coral2")) +
geom_line(aes(y = trend_fr, color = "France", color = "steelblue3")) +
geom_hline(yintercept = 0, linetype = 3) +
labs(title = "Business cycle of France and UK",
subtitle = "Christiano-Fitzgerald filter applied to GDP growth rate",
x = "", y = "") +
theme_minimal() +
theme(legend.title = element_blank()) +
scale_y_continuous(labels = scales::percent)
mutate(df, trend_fr = mFilter::cffilter(gdp_FR)$trend,
trend_uk = mFilter::cffilter(gdp_UK)$trend,
cycle_fr = mFilter::cffilter(gdp_FR)$cycle) %>%
ggplot(aes(x = date)) +
geom_line(aes(y = trend_uk, color = "UK")) +
geom_line(aes(y = trend_fr, color = "France")) +
geom_hline(yintercept = 0, linetype = 3) +
labs(title = "Business cycle of France and UK",
subtitle = "Christiano-Fitzgerald filter applied to GDP growth rate",
x = "", y = "") +
theme_minimal() +
theme(legend.title = element_blank()) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("coral2", "steelblue3"))
filtered_cycle <- mutate(df, trend_fr = mFilter::cffilter(gdp_FR)$trend,
trend_uk = mFilter::cffilter(gdp_UK)$trend,
cycle_fr = mFilter::cffilter(gdp_FR)$cycle) %>%
ggplot(aes(x = date)) +
geom_line(aes(y = trend_uk, color = "UK")) +
geom_line(aes(y = trend_fr, color = "France")) +
geom_hline(yintercept = 0, linetype = 3) +
labs(title = "Business cycle of France and UK",
subtitle = "Christiano-Fitzgerald filter applied to GDP growth rate",
x = "", y = "") +
theme_minimal() +
theme(legend.title = element_blank()) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("coral2", "steelblue3"))
ggsave(filtered_cycle, filename = "filtered_cycle.pdf",
width = 7, height = 4)
ggplot(cor_trade_df, aes(x = share * 100, y = UK_cor)) +
geom_point(size = 2, aes(color = log10(dist))) +
scale_x_log10() +
geom_smooth(method = "loess", span = 1.9) +
scale_colour_viridis_c() +
labs(x = "Share of export to UK as GDP PPP (%)",
y = expression(" "*Delta*" ln GDP correlation with UK"),
title = "Business cycle comovement and trade",
color = "KM distance (logs)") +
geom_text_repel(aes(label = ifelse(country %in% c("France", "Australia", "New Zealand"),
country, "")),
nudge_x = -.3,
nudge_y = .1,
point.padding = unit(0.5, 'lines')) +
theme_minimal() +
theme(plot.margin = unit(rep(0.5, 4), "cm"))
filter(cor_trade_df, date == 2016) %>%
left_join(usa_fdi, by = "country") %>%
left_join(usa_export, by  = "country") %>%
mutate(share_fdi_gdp = fdi_usa/ gdp,
share_fdi_exp = fdi_usa / export_usa) %>%
ggplot(aes(x = share_fdi_exp, y = usa_cor)) +
geom_point() +
scale_x_log10() +
geom_smooth(method = "loess", span = 1.5) +
geom_text_repel(aes(label = ifelse(share_fdi_exp > 15, country, "")),
nudge_x = -.3,
point.padding = unit(0.7, 'lines'))
usa_fdi_plot <- filter(cor_trade_df, date == 2016) %>%
left_join(usa_fdi, by = "country") %>%
left_join(usa_export, by  = "country") %>%
mutate(share_fdi_gdp = fdi_usa/ gdp,
share_fdi_exp = fdi_usa / export_usa) %>%
ggplot(aes(x = share_fdi_exp, y = usa_cor)) +
geom_point() +
scale_x_log10() +
geom_smooth(method = "loess", span = 1.5) +
geom_text_repel(aes(label = ifelse(share_fdi_exp > 15, country, "")),
nudge_x = -.3,
point.padding = unit(0.7, 'lines')) +
theme_minimal() +
labs(title = "FDI activity and business cycle synchronization",
x = "FDI / export to USA",
y = expression(" "*Delta*" ln GDP correlation with USA"))
usa_fdi_plot
filter(cor_trade_df, date == 2016) %>%
left_join(usa_fdi, by = "country") %>%
left_join(usa_export, by  = "country") %>%
mutate(share_fdi_gdp = fdi_usa/ gdp,
share_fdi_exp = fdi_usa / export_usa) %>%
ggplot(aes(x = share_fdi_exp, y = usa_cor)) +
geom_point() +
geom_smooth(method = "lm", span = 1.5) +
scale_x_log10()
ggsave(usa_fdi_plot, filename = "usa_fdi_plot.pdf",
width = 6, height = 4)
ggplot(df, aes(x = gdp_FR, y = gdp_UK)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Quarterly GDP growth between UK and France",
y = expression(" "*Delta*" ln GDP of UK"),
x = expression(" "*Delta*" ln GDP of France")) +
scale_x_continuous(label = scales::percent) +
scale_y_continuous(label = scales::percent)
gdp_fr_uk_plot <- ggplot(df, aes(x = gdp_FR, y = gdp_UK)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Quarterly GDP growth between UK and France",
y = expression(" "*Delta*" ln GDP of UK"),
x = expression(" "*Delta*" ln GDP of France")) +
scale_x_continuous(label = scales::percent) +
scale_y_continuous(label = scales::percent) +
theme_minimal()
gdp_fr_uk_plot
ggsave(gdp_fr_uk_plot, filename = "gdp_fr_uk.pdf",
width = 5, height = 4)
select(df_wb, - gdp) %>%
group_by(date) %>%
summarise(dev = sd(gdp_delta, na.rm = TRUE)) %>%
ungroup() %>%
ggplot(aes(x = date)) +
geom_line(aes(y = dev)) +
geom_point(aes(y = dev)) +
scale_x_continuous(n.breaks = 10) +
scale_y_continuous(labels = function(x) paste0(x *100, " p.p")) +
labs(x = "", y = expression("deviation of "*Delta*" ln GDP"),
title = "Global business cycle comovement") +
theme(plot.title = element_text(hjust = 0.5))
globalization <- select(df_wb, - gdp) %>%
group_by(date) %>%
summarise(dev = sd(gdp_delta, na.rm = TRUE)) %>%
ungroup() %>%
ggplot(aes(x = date)) +
geom_line(aes(y = dev)) +
geom_point(aes(y = dev)) +
scale_x_continuous(n.breaks = 10) +
scale_y_continuous(labels = function(x) paste0(x *100, " p.p")) +
labs(x = "", y = expression("deviation of "*Delta*" ln GDP"),
title = "Global business cycle comovement") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_minimal()
ggsave(globalization, filename = "globalization.pdf",
width = 4, height = 2.5)
ggsave(globalization, filename = "globalization.pdf",
width = 6, height = 4)
ggsave(globalization, filename = "globalization.pdf",
width = 5, height = 3)
cor(cor_trade_df$dist, cor_trade_df$share, use = "pairwise.complete.obs")
cor(df$gdp_FR, resid(lm(gdp_UK ~ gdp_FR, data = df)))
filter(cor_trade_df, date == 2016) %>%
left_join(usa_fdi, by = "country") %>%
left_join(usa_export, by  = "country") %>%
select(fdi_usa, export_usa) %>%
mutate(fdi_usa = log10(fdi_usa),
export_usa = log10(export_usa)) %>%
cor(use = "pairwise.complete.obs")
filter(cor_trade_df, date == 2016) %>%
left_join(usa_fdi, by = "country") %>%
left_join(usa_export, by  = "country") %>%
mutate(share_fdi_gdp = fdi_usa / gdp,
share_exp = export_usa/ gdp) %>%
ggplot(aes(usa_cor, fdi_usa)) +
geom_point() +
scale_y_log10() +
scale_x_log10() +
geom_smooth(method = "lm")
filter(cor_trade_df, date == 2016) %>%
left_join(usa_fdi, by = "country") %>%
left_join(usa_export, by  = "country") %>%
select(fdi_usa, export_usa) %>%
mutate(fdi_usa = log10(fdi_usa),
export_usa = log10(export_usa)) %>%
cor(use = "pairwise.complete.obs")
filter(cor_trade_df, date == 2016) %>%
left_join(usa_fdi, by = "country") %>%
left_join(usa_export, by  = "country") %>%
mutate(share_fdi_gdp = fdi_usa / gdp,
share_exp = export_usa/ gdp) %>%
ggplot(aes(usa_cor, fdi_usa)) +
geom_point() +
scale_y_log10() +
scale_x_log10() +
geom_smooth(method = "lm")
ggplot(cor_trade_df) +
geom_point(aes(x = UK))
pivot_longer(df, cols = -date) %>%
ggplot() +
geom_line(aes(x = date, y = value))+
facet_wrap(~ name, scales = "free")
